// 1. 完全二叉树
// 在完全二叉树中，除了(最底层)节点可能没填满外，其余每层节点数都达到最大值，
// 并且最下面一层的节点都集中在该层(最左边)的若干位置。
// 若最底层为第 h 层，则该层包含 1~ 2^(h-1) 个节点。

// 2. 二叉搜索树是一个有序树
// 若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；
// 若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值；

// 3. 平衡二叉搜索树(AVL树)
// 它是一棵空树或它的左右两个子树的高度差的绝对值不超过1,
// 并且左右两个子树都是一棵平衡二叉树

// 4. 二叉树的遍历方式
// // (***深度***优先遍历):先往深走，遇到叶子节点再往回走。
// 前序遍历（递归法，迭代法）
// 中序遍历（递归法，迭代法）
// 后序遍历（递归法，迭代法）
// // (***广度***优先遍历):一层一层的去遍历。
// 层次遍历（迭代法）
